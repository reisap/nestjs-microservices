services:
    reservations:
        build:
            context: .
            dockerfile: "./apps/reservations/Dockerfile"
            target: development
        command: pnpm run start:dev reservations
        container_name: reservations_services
        environment:
            - NODE_ENV=development
        hostname: reservations
        ports:
            - "3000:3000"
        volumes:
            - .:/usr/src/app
        env_file:
            - ./apps/reservations/.env
        depends_on:
            - db
    auth:
        build:
            context: .
            dockerfile: "./apps/auth/Dockerfile"
            target: development
        command: pnpm run start:dev auth
        container_name: auth_services
        environment:
            - NODE_ENV=development
        hostname: auth
        ports:
            - "3001:3001"
        volumes:
            - .:/usr/src/app
        env_file:
            - ./apps/auth/.env
        depends_on:
            - db
    db:
        image: "mongo"
        restart: unless-stopped
        container_name: mongodb
        hostname: db
        ports:
            - 27017:27017
        env_file:
            - .env
        volumes:
            - mongodata:/data/db
            - mongodb_config:/data/configdb
        command: mongod

volumes:
    mongodata:
    mongodb_config:
